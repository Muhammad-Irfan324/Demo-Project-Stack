AWSTemplateFormatVersion: '2010-09-09'
Description: 'ASG in private subnet with ALB internal in private subnet'

Parameters:
  Environment:
    Description: 'Deployment environment.'
    Type: String
    Default: 'ASG'
  AppInstanceName:
    Description: 'EC2 instance name.'
    Type: String
    Default: "Task-02-ASG-Instances"
  CloudWatchLogRetention:
    AllowedValues:
    - '1'
    - '3'
    - '5'
    - '7'
    - '14'
    - '30'
    - '60'
    - '90'
    - '120'
    - '150'
    - '180'
    - '365'
    - '400'
    - '545'
    - '731'
    - '1827'
    - '3653'
    ConstraintDescription: 'Must be a valid integer.'
    Default: '1'
    Description: 'The number of days to retain Cloudwatch Logs for this auto scaling
      group.'
    Type: String
  CloudWatchHighEval:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: Must be a valid integer.
    Default: '3'
    Description: 'The number of periods over which data is compared to the specified
      threshold.'
    Type: String
  CloudWatchHighOperator:
    AllowedValues:
    - GreaterThanOrEqualToThreshold
    - GreaterThanThreshold
    - LessThanThreshold
    - LessThanOrEqualToThreshold
    Default: GreaterThanThreshold
    Description: 'Operator used by CloudWatch for alarms and triggers.'
    Type: String
  CloudWatchHighPeriod:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: Must be a valid integer.
    Default: '60'
    Description: 'Time the specified statistic is applied. Must be in seconds that
      is also a multiple of 60.'
    Type: String
  CloudWatchHighThreshold:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: Must be a valid integer.
    Default: '90'
    Description: 'The value against which the specified statistic is compared.'
    Type: String
  CloudWatchLowEval:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer.'
    Default: '3'
    Description: 'The number of periods over which data is compared to the specified
      threshold.'
    Type: String
  CloudWatchLowOperator:
    AllowedValues:
    - GreaterThanOrEqualToThreshold
    - GreaterThanThreshold
    - LessThanThreshold
    - LessThanOrEqualToThreshold
    Default: LessThanThreshold
    Description: 'Math operator used by CloudWatch for alarms and triggers.'
    Type: String
  CloudWatchLowPeriod:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer'
    Default: '300'
    Description: 'Time the specified statistic is applied. Must be in seconds that
      is also a multiple of 60.'
    Type: String
  CloudWatchLowThreshold:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer'
    Default: '20'
    Description: 'The value against which the specified statistic is compared.'
    Type: String
  DesiredCapacity:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer'
    Default: '1'
    Description: 'Specifies the desired capacity for the Auto Scaling group'
    Type: String
  DetailedMonitoring:
    AllowedValues:
    - 'False'
    - 'True'
    Default: 'True'
    Description: 'Enable Detailed Monitoring'
    Type: String
  EC2ScaleDownAdjustment:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer'
    Default: '1'
    Description: 'Number of EC2 instances to scale down by at a time.'
    Type: String
  EC2ScaleDownCooldown:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer.'
    Default: '300'
    Description: Time in seconds before any further trigger-related scaling can occur.
    Type: String
  EC2ScaleUpAdjustment:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer.'
    Default: '1'
    Description: Number of EC2 instances to scale up by at a time.
    Type: String
  EC2ScaleUpCooldown:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer.'
    Default: '300'
    Description: 'Time in seconds before any further trigger-related scaling can occur.'
    Type: String
  EBSVolumeSize:
    Default: '8'
    Description: 'Select EBS Volume Size in GB.'
    Type: String
  EBSVolumeType:
    AllowedValues:
      - gp2
      - gp3
    Default: gp3
    Description: 'Select EBS Volume Type.'
    Type: String
  HealthCheckGracePeriod:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer.'
    Default: '300'
    Description: 'Number of seconds grace during which no autoscaling actions will
      be taken.'
    Type: String
  HealthCheckType:
    AllowedValues:
      - EC2
      - ELB
    Default: EC2
    Description: 'Define the type of health check for the AutoScaling group.'
    Type: String
  ImageID:
    Default: 'ami-0261755bbcb8c4a84'
    Description: Amazon Machine ID of Ubuntu-20 From US-EAST-1 Region which we'll use in this ASG
    Type: AWS::EC2::Image::Id
  InstanceType:
    AllowedValues:
      - a1.2xlarge
      - a1.4xlarge
      - a1.large
      - a1.medium
      - a1.metal
      - a1.xlarge
      - c1.medium
      - c1.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c3.large
      - c3.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c4.large
      - c4.xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.large
      - c5.metal
      - c5.xlarge
      - c5d.12xlarge
      - c5d.18xlarge
      - c5d.24xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.large
      - c5d.metal
      - c5d.xlarge
      - c5n.18xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.large
      - c5n.metal
      - c5n.xlarge
      - cc2.8xlarge
      - cr1.8xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - d2.xlarge
      - f1.16xlarge
      - f1.2xlarge
      - f1.4xlarge
      - g2.2xlarge
      - g2.8xlarge
      - g3.16xlarge
      - g3.4xlarge
      - g3.8xlarge
      - g3s.xlarge
      - g4dn.12xlarge
      - g4dn.16xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.metal
      - g4dn.xlarge
      - h1.16xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - hs1.8xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - i2.xlarge
      - i3.16xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.large
      - i3.metal
      - i3.xlarge
      - i3en.12xlarge
      - i3en.24xlarge
      - i3en.2xlarge
      - i3en.3xlarge
      - i3en.6xlarge
      - i3en.large
      - i3en.metal
      - inf1.24xlarge
      - inf1.2xlarge
      - inf1.6xlarge
      - inf1.xlarge
      - m1.large
      - m1.medium
      - m1.small
      - m1.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m2.xlarge
      - m3.2xlarge
      - m3.large
      - m3.medium
      - m3.xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.large
      - m4.xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.large
      - m5.metal
      - m5.xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.large
      - m5a.xlarge
      - m5ad.12xlarge
      - m5ad.16xlarge
      - m5ad.24xlarge
      - m5ad.2xlarge
      - m5ad.4xlarge
      - m5ad.8xlarge
      - m5ad.large
      - m5ad.xlarge
      - m5d.12xlarge
      - m5d.16xlarge
      - m5d.24xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.large
      - m5d.metal
      - m5d.xlarge
      - m5dn.12xlarge
      - m5dn.16xlarge
      - m5dn.24xlarge
      - m5dn.2xlarge
      - m5dn.4xlarge
      - m5dn.8xlarge
      - m5dn.large
      - m5dn.metal
      - m5dn.xlarge
      - m5n.12xlarge
      - m5n.16xlarge
      - m5n.24xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.large
      - m5n.metal
      - m5n.xlarge
      - m6g.12xlarge
      - m6g.16xlarge
      - m6g.2xlarge
      - m6g.4xlarge
      - m6g.8xlarge
      - m6g.large
      - m6g.medium
      - m6g.metal
      - m6g.xlarge
      - p2.16xlarge
      - p2.8xlarge
      - p2.xlarge
      - p3.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3dn.24xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r3.large
      - r3.xlarge
      - r4.16xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.large
      - r4.xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.large
      - r5.metal
      - r5.xlarge
      - r5a.12xlarge
      - r5a.16xlarge
      - r5a.24xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.8xlarge
      - r5a.large
      - r5a.xlarge
      - r5ad.12xlarge
      - r5ad.16xlarge
      - r5ad.24xlarge
      - r5ad.2xlarge
      - r5ad.4xlarge
      - r5ad.8xlarge
      - r5ad.large
      - r5ad.xlarge
      - r5d.12xlarge
      - r5d.16xlarge
      - r5d.24xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.8xlarge
      - r5d.large
      - r5d.metal
      - r5d.xlarge
      - r5dn.12xlarge
      - r5dn.16xlarge
      - r5dn.24xlarge
      - r5dn.2xlarge
      - r5dn.4xlarge
      - r5dn.8xlarge
      - r5dn.large
      - r5dn.metal
      - r5dn.xlarge
      - r5n.12xlarge
      - r5n.16xlarge
      - r5n.24xlarge
      - r5n.2xlarge
      - r5n.4xlarge
      - r5n.8xlarge
      - r5n.large
      - r5n.metal
      - r5n.xlarge
      - t1.micro
      - t2.2xlarge
      - t2.large
      - t2.medium
      - t2.micro
      - t2.nano
      - t2.small
      - t2.xlarge
      - t3.2xlarge
      - t3.large
      - t3.medium
      - t3.micro
      - t3.nano
      - t3.small
      - t3.xlarge
      - t3a.2xlarge
      - t3a.large
      - t3a.medium
      - t3a.micro
      - t3a.nano
      - t3a.small
      - t3a.xlarge
      - u-12tb1.metal
      - u-18tb1.metal
      - u-24tb1.metal
      - u-6tb1.metal
      - u-9tb1.metal
      - x1.16xlarge
      - x1.32xlarge
      - x1e.16xlarge
      - x1e.2xlarge
      - x1e.32xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.xlarge
      - z1d.12xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.large
      - z1d.metal
      - z1d.xlarge
    ConstraintDescription: 'Must be a valid EC2 instance type'
    Default: t2.micro
    Description: 'Select instance type.'
    Type: String
  KeyName:
    Default: KEY
    Description: 'Name of an existing EC2 KeyPair to enable SSH access to the instances.'
    Type: AWS::EC2::KeyPair::KeyName
  ScalingCreateTimeOut:
    ConstraintDescription: '#H#M#S where each # is the number of hours or minutes
      or seconds'
    Default: 20M
    Description: 'Time to wait for the number of signals equal to ScalingMin. H/M/S
      Hours/Minutes/Seconds'
    Type: String
  ScalingMax:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer.'
    Default: '4'
    Description: 'The maximum size of the Auto Scaling group.'
    Type: String
  ScalingMin:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer.'
    Default: 1
    Description: 'The minimum size of the Auto Scaling group.'
    Type: String
  ScalingTermination:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: 'Must be a valid integer.'
    Default: '1'
    Description: 'The maximum number of instances that are terminated at a given time.'
    Type: String
  ScalingUpdateTimeOut:
    ConstraintDescription: '#H#M#S where each # is the number of hours or minutes
      or seconds'
    Default: 20M
    Description: 'Post update pause before additional Auto Scale resource changes.
      H/M/S Hours/Minutes/Seconds'
    Type: String
  TerminatedInstances:
    Default: '30'
    Description: 'Specifies the maximum number of instances that can be terminated
      in a six hour period without generating a Cloudwatch Alarm.'
    Type: Number
  FailedMaxHealthCheckCount:
    Default: '2'
    Description: The number of consecutive failed health checks that are required
      before a target is considered unhealthy.
    MaxValue: '10'
    MinValue: '2'
    Type: Number
  HealthCheckInterval:
    Default: '30'
    Description: The approximate number of seconds between health checks for an individual
      target.
    MaxValue: '300'
    MinValue: '5'
    Type: Number
  HealthCheckProtocol:
    AllowedValues:
      - HTTP
      - HTTPS
    Default: HTTP
    Description: Health check protocol.
    Type: String
  HealthCheckTimeout:
    Default: '10'
    Description: Seconds to wait for a response before considering that a health check
      has failed.
    MaxValue: '120'
    MinValue: '5'
    Type: Number
  TargetGroupProtocol:
    AllowedValues:
      - HTTP
      - HTTPS
    Default: HTTP
    Description: The protocol to use for routing traffic to the targets.
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: 'CloudWatch AutoScaling Alarm Configuration'
      Parameters:
      - CloudWatchLowOperator
      - CloudWatchHighPeriod
      - CloudWatchLowPeriod
      - CloudWatchHighOperator
      - CloudWatchHighThreshold
      - CloudWatchLowThreshold
      - CloudWatchLowEval
      - CloudWatchHighEval
      - CloudWatchLogRetention
    - Label:
        default: 'Application Load Balancer and Target Group Configuration'
      Parameters:
      - FailedMaxHealthCheckCount
      - HealthCheckInterval
      - HealthCheckProtocol
      - HealthCheckTimeout
      - TargetGroupProtocol
    - Label:
        default: 'EC2 Instance Configuration'
      Parameters:
      - ImageID
      - KeyName
      - InstanceType
      - EBSVolumeSize
      - AppInstanceName
      - DetailedMonitoring
      - EBSVolumeType
      - Environment
    - Label:
        default: 'AutoScaling Configuration'
      Parameters:
      - ScalingCreateTimeOut
      - ScalingUpdateTimeOut
      - ScalingMin
      - ScalingTermination
      - EC2ScaleDownCooldown
      - HealthCheckGracePeriod
      - HealthCheckType
      - EC2ScaleUpAdjustment
      - EC2ScaleDownAdjustment
      - DesiredCapacity
      - TerminatedInstances
      - ScalingMax
      - EC2ScaleUpCooldown
    ParameterLabels:
      AppInstanceName:
        default: App Group Name
      DesiredCapacity:
        default: Desired Capacity
      DetailedMonitoring:
        default: Detailed Monitoring?
      EBSVolumeSize:
        default: EBS Volume Size
      EBSVolumeType:
        default: EBS Volume Type
      HealthCheckGracePeriod:
        default: Health Check Period
      HealthCheckType:
        default: Health Check Type
      ImageID:
        default: Image ID
      InstanceType:
        default: Instance Type
      KeyName:
        default: SSH Key Name
      ScalingCreateTimeOut:
        default: Create Signal Timeout
      ScalingMax:
        default: Maximum Instances
      ScalingMin:
        default: Mininum Instances
      ScalingTermination:
        default: Termination Count
      ScalingUpdateTimeOut:
        default: Update Signal Timeout
      TerminatedInstances:
        default: Number of Terminated Instances
      CloudWatchLogRetention:
        default: CloudWatch Log Retention
      Environment:
        default: Deployment Environment
      FailedMaxHealthCheckCount:
        default: Failed Health Checks
      HealthCheckInterval:
        default: Health Check Interval
      HealthCheckProtocol:
        default: Health Check Protocol
      HealthCheckTimeout:
        default: Health Check Timeout
      TargetGroupProtocol:
        default: Target Group Protocol

Resources:
# Application Load Balancer 
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "APP-Load-Balancer"
      Scheme: internal
      Subnets: 
        - !ImportValue ExportedPrivateSubnet1
        - !ImportValue ExportedPrivateSubnet2
      SecurityGroups: 
        - !ImportValue ExportedALBSecGroup

  # Target Group
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetGroupAttributes:
        - { Key: "load_balancing.algorithm.type", Value: "least_outstanding_requests" }
        - { Key: "stickiness.enabled", Value: "true" }
        - { Key: "stickiness.lb_cookie.duration_seconds", Value: "1800" }
      HealthCheckIntervalSeconds: !Ref 'HealthCheckInterval'
      HealthCheckPath: '/'
      HealthCheckPort: '8080'
      HealthCheckProtocol: !Ref 'HealthCheckProtocol'
      HealthCheckTimeoutSeconds: !Ref 'HealthCheckTimeout'
      HealthyThresholdCount: !Ref 'FailedMaxHealthCheckCount'
      Name: 'ALB-TG'
      Port: 8080
      Protocol: !Ref 'TargetGroupProtocol'
      UnhealthyThresholdCount: !Ref 'FailedMaxHealthCheckCount'
      VpcId: !ImportValue ExportedVpcId
  
# ALB Listener
  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup
      LoadBalancerArn: !Ref MyALB
      Port: 80
      Protocol: HTTP

# ASG
  AutoScaleGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy:
      ResourceSignal:
        Count: !Ref ScalingMin
        Timeout:
          Fn::Sub: PT${ScalingCreateTimeOut}
    Properties:
      TerminationPolicies:
        - "OldestInstance"
        - "OldestLaunchConfiguration"
      DesiredCapacity: !Ref DesiredCapacity
      HealthCheckGracePeriod: !Ref HealthCheckGracePeriod
      HealthCheckType: !Ref HealthCheckType
      LaunchConfigurationName: !Ref LaunchConfig
      MaxSize: !Ref ScalingMax
      MetricsCollection:
      - Granularity: 1Minute
      MinSize: !Ref ScalingMin
      NotificationConfigurations:
        - NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
          TopicARN: !ImportValue ExportedSNSTopic
      Tags:
      - Key: environment
        PropagateAtLaunch: True
        Value: !Ref Environment
      - Key: Name
        PropagateAtLaunch: True
        Value: !Ref AppInstanceName
      - Key: deployment
        PropagateAtLaunch: True
        Value: !Ref AppInstanceName
      TargetGroupARNs:
        - !Ref MyTargetGroup
      VPCZoneIdentifier: 
        - !ImportValue ExportedPrivateSubnet1
        - !ImportValue ExportedPrivateSubnet2
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: !Ref ScalingTermination
        MinInstancesInService: !Ref ScalingMin
        MinSuccessfulInstancesPercent: 100
        PauseTime:
          Fn::Sub: PT${ScalingUpdateTimeOut}
        SuspendProcesses:
        - ScheduledActions
        - ReplaceUnhealthy
        - AlarmNotification
        - AZRebalance
        WaitOnResourceSignals: True
  # SCALE UP & DOWN POLICY      
  EC2ScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScaleGroup
      Cooldown: !Ref EC2ScaleDownCooldown
      ScalingAdjustment:
        Fn::Sub: -${EC2ScaleDownAdjustment}
  EC2CPUScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScaleGroup
      Cooldown: !Ref EC2ScaleUpCooldown
      ScalingAdjustment: !Ref EC2ScaleUpAdjustment
  # Alarm to monitor Termination Of Instances in ASG
  GroupTerminatingInstances:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !ImportValue ExportedSNSTopic
      AlarmDescription:
        Fn::Sub: 'Over ${TerminatedInstances} instances terminated in last 6 hours.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          !Ref AutoScaleGroup
      EvaluationPeriods: 1
      MetricName: GroupTerminatingInstances
      Namespace: AWS/AutoScaling
      OKActions:
        - !ImportValue ExportedSNSTopic
      Period: 21600
      Statistic: Sum
      Threshold:
        !Ref TerminatedInstances
      Unit: Count
  # LAUNCHCONFIG
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - SetupCloudFormationHelper
            - SetupCloudWatchAgent
          CloudWatchAgent:
            - SetupCloudWatchAgent
        SetupCloudFormationHelper:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackName}
                region=${AWS::Region}
                interval=5
                verbose=true
              mode: "000400"
              owner: "root"
              group: "root"
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.Instance.Metadata.AWS::CloudFormation::Init
                action=/usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource Instance --configsets CloudWatchAgent --region ${AWS::Region}
                runas=root
              mode: "000400"
              owner: "root"
              group: "root"
            /lib/systemd/system/cfn-hup.service:
              content: !Sub |
                [Unit]
                Description=cfn-hup daemon
                [Service]
                Type=simple
                ExecStart=/usr/local/bin/cfn-hup
                Restart=always
                [Install]
                WantedBy=multi-user.target
          commands:
            01-Enable-cfn-hup:
              command: systemctl enable cfn-hup.service
            02-Start-cfn-hup:
              command: systemctl start cfn-hup.service
        SetupCloudWatchAgent:
          files:
            /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json:
              content: !Sub |
                {
                	"logs": {
                		"logs_collected": {
                			"files": {
                				"collect_list": [
                          {
                						"file_path": "/var/log/cfn-hup.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cfn-hup.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cfn-init.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cfn-init.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cfn-init-cmd.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cfn-init-cmd.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cloud-init.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cloud-init.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cloud-init-output.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cloud-init-output.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cfn-wire.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cfn-wire.log",
                						"timezone": "UTC"
                					},
                          {
                						"file_path": "/var/log/nginx/access.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/var/log/nginx/access.log",
                						"timezone": "UTC"
                					},
                          {
                						"file_path": "/var/log/nginx/error.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/var/log/nginx/error.log",
                						"timezone": "UTC"
                					}
                				]
                			}
                		}
                	},
                	"metrics": {
                		"append_dimensions": {
                			"InstanceId": "${!aws:InstanceId}"
                		},
                		"metrics_collected": {
                			"mem": {
                				"measurement": ["mem_used_percent"]
                			},
                			"disk": {
                				"measurement": ["disk_used_percent"]
                			}
                		}
                	}
                }
          commands:
            01-StopService:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a stop
            02-StartService:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          while true ; do
            if lsof -c apt -c dpkg 2>/dev/null | grep -e /var/lib/apt/lists/lock -e /var/lib/dpkg/lock -e /var/lib/dpkg/lock-frontend ; then
              echo -e "Waiting for apt/dpkg lock release"
              sleep 2
            else
              apt-get -y update
              apt-get -y install virtualenv python python3 python3-pip python-setuptools python3-setuptools python-dev python3-dev python3-venv build-essential unzip nginx
              rm -f /usr/bin/python && ln -s /usr/bin/python3 /usr/bin/python
              wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb -O /tmp/amazon-cloudwatch-agent.deb
              dpkg -i /tmp/amazon-cloudwatch-agent.deb && break
            fi
          done
          if [ ! -f /tmp/amazon-cloudwatch-agent.deb ]; then
            rm -rvf /tmp/amazon-cloudwatch-agent.deb
          fi
          mkdir -p /tmp/install-awscli
          cd /tmp/install-awscli
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
          
          sed -i 's/listen 80 default_server;/listen 8080 default_server;/g' /etc/nginx/sites-available/default

          systemctl reload nginx

          INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
          PRIVATE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)
          echo "Hello World from $INSTANCE_ID with Private IP: $PRIVATE_IP" > /var/www/html/index.html

          cd ~
          /usr/bin/python3 -m venv /root/.DevOps/
          source /root/.DevOps/bin/activate
          /root/.DevOps/bin/pip install setuptools==54.1.1 wheel
          /root/.DevOps/bin/pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          /root/.DevOps/bin/cfn-init -v --configsets default --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
          /root/.DevOps/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AutoScaleGroup --region ${AWS::Region}
          deactivate
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: True
            VolumeSize: !Ref EBSVolumeSize
            VolumeType: !Ref EBSVolumeType
      IamInstanceProfile: !Ref InstanceIAMProfile
      ImageId: !Ref ImageID
      InstanceMonitoring: !Ref DetailedMonitoring
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !ImportValue ExportedASGSecGroup
  # LifeCycle Hook Before Instances remove in ASG
  AutoScaleGroupLifecycleHook:
    Type: AWS::AutoScaling::LifecycleHook
    Properties:
      LifecycleHookName: !Sub '${AWS::StackName}-LifecycleHook'
      AutoScalingGroupName: !Ref AutoScaleGroup
      LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
      HeartbeatTimeout: 1800
      DefaultResult: ABANDON

# CPU ALARMS FOR ASG & ALB
  ScaleCPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref EC2ScaleDownPolicy
        - !ImportValue ExportedSNSTopic
      AlarmDescription:
        Fn::Sub: Scale-down if CPUUtilization ${CloudWatchLowOperator} ${CloudWatchLowThreshold}%
          for ${CloudWatchLowPeriod} seconds ${CloudWatchLowEval} times.
      ComparisonOperator: !Ref CloudWatchLowOperator
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScaleGroup
      EvaluationPeriods: !Ref 'CloudWatchLowEval'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: !Ref 'CloudWatchLowPeriod'
      Statistic: Average
      Threshold: !Ref CloudWatchLowThreshold
  ScaleCPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
      - !Ref EC2CPUScaleUpPolicy
      - !ImportValue ExportedSNSTopic
      AlarmDescription:
        Fn::Sub: Scale-up if CPUUtilization ${CloudWatchHighOperator} ${CloudWatchHighThreshold}%
          for ${CloudWatchHighPeriod} seconds ${CloudWatchHighEval} times.
      ComparisonOperator: !Ref CloudWatchHighOperator
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScaleGroup
      EvaluationPeriods: !Ref CloudWatchHighEval
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: !Ref CloudWatchHighPeriod
      Statistic: Average
      Threshold: !Ref CloudWatchHighThreshold
  ALBAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: MyALBHighLatencyAlarm
      AlarmDescription: Alarm for high latency on the ALB
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Statistic: Average
      ComparisonOperator: !Ref CloudWatchHighOperator
      Threshold: 0.5 
      Period: !Ref CloudWatchHighPeriod
      EvaluationPeriods: !Ref CloudWatchHighEval
      TreatMissingData: notBreaching
      AlarmActions:
        - !ImportValue ExportedSNSTopic 
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref MyALB

  #IAM PROFILE    
  InstanceIAMProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'InstanceIAMRole'
  #IAM ROLE      
  InstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
            - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
      Path: /
  InstancePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: InstancePolicy
      Roles:
        - !Ref InstanceIAMRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - cloudwatch:PutMetricData
              - cloudwatch:GetMetricStatistics
              - cloudwatch:ListMetrics
            Effect: Allow
            Resource: "*"
          - Action:
            - cloudformation:Describe*
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
          - Action:
              - ec2:DescribeInstances
              - ec2:DescribeInstanceStatus
              - ec2:DescribeTags
              - ec2:CreateTags
              - ec2:DescribeVolumes
            Effect: Allow
            Resource: "*"
          - Action:
              - ssm:UpdateInstanceInformation
            Effect: Allow
            Resource: "*"      
          - Action:
            - secretsmanager:GetSecretValue
            Effect: Allow
            Resource: "*"          
  
  CloudWatchLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: !Ref 'CloudWatchLogRetention'

Outputs:
  ALBDNSName:
    Description: ALB DNS Name
    Value: !GetAtt MyALB.DNSName       