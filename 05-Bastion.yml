AWSTemplateFormatVersion: '2010-09-09'
Description: "BASTION HOST"

Parameters:
  InstanceName:
    Description: Instance name
    Default: 'Task-03-Bastion'
    Type: String
  InstanceType:
    AllowedValues:
      - a1.medium
      - a1.large
      - a1.xlarge
      - a1.2xlarge
      - a1.4xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      # Compute optimized
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
      # Memory optimized
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5.metal
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.12xlarge
      - r5a.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - r5d.metal
      - u-6tb1.metal
      - u-9tb1.metal
      - u-12tb1.metal
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
      - z1d.metal
      # Storage optimized
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - i3.metal
      # Accelerated computing
      - f1.2xlarge
      - f1.4xlarge
      - f1.16xlarge
      - g3s.xlarge
      - g3.4xlarge
      - g3.8xlarge
      - g3.16xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - p3dn.24xlarge
    Default: 't2.micro'
    Description: Select instance type
    Type: String
  InstnaceImageID:
    Default: 'ami-0261755bbcb8c4a84'
    Description: Amazon Machine ID to use for the instance
    Type: AWS::EC2::Image::Id
  InstanceVolumeSize:
    Default: '8'
    Description: Select root EBS volume size in GB
    Type: String
  InstanceVolumeType:
    AllowedValues:
      - 'gp2'
      - 'gp3'
    Default: 'gp3'
    Type: String
  InstanceKeyName:
    Default: KEY
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  InstanceDetailedMonitoring:
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'True'
    Description: Enable detailed monitoring
    Type: String
  CloudWatchCPUHighThreshold:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: Must be a valid integer
    Default: '75'
    Description: The value against which CPU usage is compared
    Type: String
  CloudWatchMemHighThreshold:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: Must be a valid integer
    Default: '75'
    Description: The value against which memory usage is compared
    Type: String
  CloudWatchDiskHighThreshold:
    AllowedPattern: ([0-9]+)
    ConstraintDescription: Must be a valid integer
    Default: '75'
    Description: The value against which disk usage is compared
    Type: String
  CloudWatchHighOperator:
    AllowedValues:
      - 'GreaterThanOrEqualToThreshold'
      - 'GreaterThanThreshold'
      - 'LessThanThreshold'
      - 'LessThanOrEqualToThreshold'
    Default: 'GreaterThanThreshold'
    Description: Math operator used by CloudWatch for alarms and triggers
    Type: String
  CloudWatchHighPeriod:
    AllowedPattern: ([0-9]+)
    Default: '300'
    Description: Time the specified statistic is applied. Must be in seconds that is also a multiple of 60
    Type: String
  CloudWatchHighEvaluations:
    AllowedPattern: ([0-9]+)
    Default: '3'
    Description: The number of periods over which data is compared to the specified threshold
    Type: String
  CloudWatchLogRetention:
    AllowedPattern: ([0-9]+)
    Default: '1'
    Description: The number of days to retain Cloudwatch Logs for the instance
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: 'Instance Configuration'
      Parameters:
        - InstanceName
        - InstnaceImageID
        - InstanceType
        - InstanceVolumeSize
        - InstanceVolumeType
        - InstanceKeyName
    - Label:
        default: 'Monitoring and Notification Configuration'
      Parameters:
        - InstanceDetailedMonitoring
        - CloudWatchCPUHighThreshold
        - CloudWatchMemHighThreshold
        - CloudWatchDiskHighThreshold
        - CloudWatchHighOperator
        - CloudWatchHighPeriod
        - CloudWatchHighEvaluations
        - CloudWatchLogRetention
    ParameterLabels:
      InstanceName:
        default: Name
      InstnaceImageID:
        default: Image ID
      InstanceType:
        default: Instance Type
      InstanceVolumeSize:
        default: Volume Size
      InstanceVolumeType:
        default: Volume Type
      InstanceKeyName:
        default: SSH Key
      InstanceDetailedMonitoring:
        default: Detailed Monitoring
      CloudWatchLogRetention:
        default: Log Retention
Resources:
  # EC2 instance
  Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - SetupCloudFormationHelper
            - SetupCloudWatchAgent
          CloudWatchAgent:
            - SetupCloudWatchAgent
        SetupCloudFormationHelper:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackName}
                region=${AWS::Region}
                interval=5
                verbose=true
              mode: "000400"
              owner: "root"
              group: "root"
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.Instance.Metadata.AWS::CloudFormation::Init
                action=/usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource Instance --configsets CloudWatchAgent --region ${AWS::Region}
                runas=root
              mode: "000400"
              owner: "root"
              group: "root"
            /lib/systemd/system/cfn-hup.service:
              content: !Sub |
                [Unit]
                Description=cfn-hup daemon
                [Service]
                Type=simple
                ExecStart=/usr/local/bin/cfn-hup
                Restart=always
                [Install]
                WantedBy=multi-user.target
          commands:
            01-Enable-cfn-hup:
              command: systemctl enable cfn-hup.service
            02-Start-cfn-hup:
              command: systemctl start cfn-hup.service
        SetupCloudWatchAgent:
          files:
            /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json:
              content: !Sub |
                {
                	"logs": {
                		"logs_collected": {
                			"files": {
                				"collect_list": [
                          {
                						"file_path": "/var/log/cfn-hup.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cfn-hup.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cfn-init.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cfn-init.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cfn-init-cmd.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cfn-init-cmd.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cloud-init.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cloud-init.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cloud-init-output.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cloud-init-output.log",
                						"timezone": "UTC"
                					},
                					{
                						"file_path": "/var/log/cfn-wire.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/cfn-wire.log",
                						"timezone": "UTC"
                					},
                          {
                						"file_path": "/var/log/nginx/access.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/var/log/nginx/access.log",
                						"timezone": "UTC"
                					},
                          {
                						"file_path": "/var/log/nginx/error.log",
                						"log_group_name": "${CloudWatchLogs}",
                						"log_stream_name": "{instance_id}/var/log/nginx/error.log",
                						"timezone": "UTC"
                					}
                				]
                			}
                		}
                	},
                	"metrics": {
                		"append_dimensions": {
                			"InstanceId": "${!aws:InstanceId}"
                		},
                		"metrics_collected": {
                			"mem": {
                				"measurement": ["mem_used_percent"]
                			},
                			"disk": {
                				"measurement": ["disk_used_percent"]
                			}
                		}
                	}
                }
          commands:
            01-StopService:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a stop
            02-StartService:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref InstanceVolumeSize
            VolumeType: !Ref InstanceVolumeType
            DeleteOnTermination: true
      ImageId: !Ref InstnaceImageID
      InstanceType: !Ref InstanceType
      KeyName: !Ref InstanceKeyName
      SubnetId: !ImportValue ExportedPublicSubnet1
      SecurityGroupIds:
        - !ImportValue ExportedBastionSecGroup
      IamInstanceProfile: !Ref InstanceIAMProfile
      Monitoring: !Ref InstanceDetailedMonitoring
      Tags:
        - { Key: Name, Value: !Ref InstanceName }
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          while true ; do
            if lsof -c apt -c dpkg 2>/dev/null | grep -e /var/lib/apt/lists/lock -e /var/lib/dpkg/lock -e /var/lib/dpkg/lock-frontend ; then
              echo -e "Waiting for apt/dpkg lock release"
              sleep 2
            else
              apt-get -y update
              apt-get -y install virtualenv python python3 python3-pip python-setuptools python3-setuptools python-dev python3-dev python3-venv build-essential net-tools unzip nginx
              rm -f /usr/bin/python && ln -s /usr/bin/python3 /usr/bin/python
              wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb -O /tmp/amazon-cloudwatch-agent.deb
              dpkg -i /tmp/amazon-cloudwatch-agent.deb && break
            fi
          done
          if [ ! -f /tmp/amazon-cloudwatch-agent.deb ]; then
            rm -rvf /tmp/amazon-cloudwatch-agent.deb
          fi
          mkdir -p /tmp/install-awscli
          cd /tmp/install-awscli
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
          
          cd ~
          /usr/bin/python3 -m venv /root/.DevOps/
          source /root/.DevOps/bin/activate
          /root/.DevOps/bin/pip install setuptools==54.1.1 wheel
          /root/.DevOps/bin/pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          /root/.DevOps/bin/cfn-init -v --stack ${AWS::StackName} --resource Instance  --region ${AWS::Region} --configsets default
          deactivate

  # Elastic IP address for the instance
  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref Instance
  # CPU high usage alarm for the instance
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !ImportValue ExportedSNSTopic
      AlarmDescription: !Sub CPU Alarm ${CloudWatchHighOperator} ${CloudWatchCPUHighThreshold}% for ${CloudWatchHighPeriod} seconds ${CloudWatchHighEvaluations} times.
      ComparisonOperator: !Ref 'CloudWatchHighOperator'
      Dimensions:
        - Name: InstanceId
          Value: !Ref 'Instance'
      EvaluationPeriods: !Ref 'CloudWatchHighEvaluations'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      OKActions:
        - !ImportValue ExportedSNSTopic
      Period: !Ref 'CloudWatchHighPeriod'
      Statistic: Average
      Threshold: !Ref 'CloudWatchCPUHighThreshold'
  # Disk high usage alarm for the instance
  DiskAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !ImportValue ExportedSNSTopic
      AlarmDescription: !Sub Disk Alarm ${CloudWatchHighOperator} ${CloudWatchDiskHighThreshold}% for ${CloudWatchHighPeriod} seconds ${CloudWatchHighEvaluations} times.
      ComparisonOperator: !Ref 'CloudWatchHighOperator'
      Dimensions:
        - { Name: InstanceId, Value: !Ref 'Instance' }
        - { Name: path, Value: "/" }
        - { Name: device, Value: "xvda1" }
        - { Name: fstype, Value: ext4 }
      EvaluationPeriods: !Ref 'CloudWatchHighEvaluations'
      MetricName: disk_used_percent
      Namespace: CWAgent
      OKActions:
        - !ImportValue ExportedSNSTopic
      Period: !Ref 'CloudWatchHighPeriod'
      Statistic: Average
      Threshold: !Ref 'CloudWatchDiskHighThreshold'
  # Memory high usage alarm for the instance
  MemAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !ImportValue ExportedSNSTopic
      AlarmDescription: !Sub Memory Alarm ${CloudWatchHighOperator} ${CloudWatchMemHighThreshold}% for ${CloudWatchHighPeriod} seconds ${CloudWatchHighEvaluations} times.
      ComparisonOperator: !Ref 'CloudWatchHighOperator'
      Dimensions:
        - Name: InstanceId
          Value: !Ref 'Instance'
      EvaluationPeriods: !Ref 'CloudWatchHighEvaluations'
      MetricName: mem_used_percent
      Namespace: CWAgent
      OKActions:
        - !ImportValue ExportedSNSTopic
      Period: !Ref 'CloudWatchHighPeriod'
      Statistic: Average
      Threshold: !Ref 'CloudWatchMemHighThreshold'
  # CloudWatch logs for instance
  CloudWatchLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: !Ref 'CloudWatchLogRetention'

  # IAM profile for the instance
  InstanceIAMProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref 'InstanceIAMRole'
  # IAM role attached to the instance profile
  InstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
      Path: /
  # IAM policy attached to the role
  InstnacePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: InstancePolicy
      Roles:
      - !Ref InstanceIAMRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - cloudwatch:PutMetricData
          - cloudwatch:GetMetricStatistics
          - cloudwatch:ListMetrics
          Effect: Allow
          Resource: "*"
        - Action:
          - cloudformation:Describe*
          Effect: Allow
          Resource: "*"
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:DescribeLogGroups
          - logs:DescribeLogStreams
          - logs:PutLogEvents
          Effect: Allow
          Resource: "*"
        - Action:
          - ec2:DescribeInstances
          - ec2:DescribeInstanceStatus
          - ec2:DescribeTags
          - ec2:CreateTags
          - ec2:DescribeVolumes
          Effect: Allow
          Resource: "*"
        - Action:
          - route53:ListHostedZones
          - route53:GetChange
          Effect: Allow
          Resource: "*"

Outputs:
  InstanceID:
    Description: EC2 instance ID
    Value: !Ref Instance
    Export:
      Name: 'BASTION-Instance-ID'
  EIP:
    Description: Elastic IP address of the instance
    Value: !Ref ElasticIP
    Export:
      Name: !Sub '${AWS::StackName}-EIP'